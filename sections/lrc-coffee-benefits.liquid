<div id="lrc-coffee-benefits"></div>

<script
  type="text/babel"
>
  function LRCCoffeeBenefits() {
    const benefits = [
      {
        title: 'Train Harder, with Ease',
        img: 'https://cdn.shopify.com/s/files/1/0761/6924/9081/files/benefit-shot-1.jpg?v=1711743849',
        description:
          'Regular electrolyte supplements are abrasive on your stomach, preventing comfortable training. Our patent protected formula is pH basic, and stomach friendly.',
      },
      {
        title: 'Feel Light on Your Feet',
        img: 'https://cdn.shopify.com/s/files/1/0761/6924/9081/files/benefit-shot-2.jpg?v=1711743849',
        description:
          'Our electrolyte & caffeine formula allows for highly bioavailable hydration & energy. This naturally leads to a faster runnerâ€™s high, and more enjoyable run.',
      },
      {
        title: 'Enjoy Reduced Fatigue',
        img: 'https://cdn.shopify.com/s/files/1/0761/6924/9081/files/benefit-shot-3.jpg?v=1711743849',
        description:
          'Long Run Coffee blocks adenosine uptake in the brain, preventing tiredness & fatigue.  Plus the added sodium bicarbonate slows lactic acid buildup in muscles.',
      },
    ];
    const [activeBenefit, setActiveBenefit] = React.useState(0);
    const focusedBenefit = benefits[activeBenefit];

    return (
      <div className="lg:px-16 py-12 lg:py-32 z-10 relative lg:transform lg:-translate-y-20 max-w-7xl mx-auto">
        <div className="hidden lg:block">
          <div className="mx-auto max-w-7xl px-6 lg:px-8">
            <div className="mx-auto flex space-x-8 items-start">
              {benefits.map((benefit, i) => (
                <article key={i} className="flex flex-col items-start justify-between">
                  <div className="relative w-full">
                    <img
                      src={benefit.img}
                      alt=""
                      className="aspect-square w-full rounded-2xl bg-cyan-100 object-cover"
                    />
                    <div className="absolute inset-0 rounded-2xl ring-1 ring-inset ring-cyan-900/10" />
                  </div>
                  <div className="max-w-xl">
                    <div className="group relative">
                      <h3 className="mt-4 text-lg font-semibold leading-6 text-cyan-900 group-hover:text-cyan-600">
                        {benefit.title}
                      </h3>
                      <p className="mt-3 text-sm leading-6 text-neutral-600">{benefit.description}</p>
                    </div>
                  </div>
                </article>
              ))}
            </div>
          </div>
        </div>
        <div className="flex flex-col lg:hidden">
          <h2 className="font-accent text-cyan-700 text-3xl mb-8 pl-8">Benefits</h2>
          <div class="relative w-full flex gap-6 snap-x snap-mandatory overflow-x-auto scrollbar-hide">
            {benefits.map((b) => (
              <div key={b.title} class="snap-center shrink-0 first:pl-8 last:pr-8">
                <img
                  class="shrink-0 w-[calc(100vw-72px)] h-[calc(100vw-72px)] rounded-lg shadow-lg bg-white object-fill"
                  src={b.img}
                />
                <h4 className="font-accent w-[calc(100vw-72px)] text-wrap text-cyan-700 text-xl mt-4">{b.title}</h4>
                <p className="font-base w-[calc(100vw-72px)] text-wrap text-neutral-600 text-base mt-1">
                  {b.description}
                </p>
              </div>
            ))}
          </div>
        </div>
        {% if section.settings.show_cta %}
          <div className="flex w-full py-4 px-8 lg:py-8 mt-2 justify-center">
            <button onClick={() => {
              document.getElementById({{section.settings.cta_scroll_to_id | json}}).scrollIntoView({ behavior: 'smooth' });
            }} className="rounded text-base w-full lg:w-1/3 items-center justify-center text-center py-3 px-4 font-accent border border-tan-600 bg-tan-100 text-tan-600 hover:border-tan-700 hover:text-tan-700 hover:bg-tan-200 cursor-pointer">{{ section.settings.cta_text }}</button>
          </div>
      {% endif %}
      </div>
    );
  }

  ReactDOM.render(<LRCCoffeeBenefits />, document.getElementById('lrc-coffee-benefits'));
</script>

{% schema %}
{
  "name": "LRC Coffee Benefits",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "checkbox",
      "id": "show_cta",
      "label": "Show CTA",
      "default": false
    },
    {
      "type": "text",
      "id": "cta_text",
      "label": "CTA Text",
      "default": "Start for $3"
    },
    {
      "type": "text",
      "id": "cta_scroll_to_id",
      "label": "CTA Scroll to ID",
      "default": "lrc-klaviyo-form"
    }
  ],
  "presets": [
    {
      "name": "LRC Coffee Benefits"
    }
  ]
}
{% endschema %}
