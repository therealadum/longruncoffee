<div id="lrc-coffee-benefits"></div>

<script
  type="text/babel"
>
  function LRCCoffeeBenefits() {
    const benefits = [
      {
        title: 'Train Harder, with Ease',
        img: "{{ "benefit-shot-1.webp" | asset_url }}",
        description: "Regular electrolyte supplements are abrasive on your stomach, preventing comfortable training. Our patent protected formula is pH basic, and stomach friendly.",
      },
      {
        title: 'Feel Light on Your Feet',
        img: "{{ "benefit-shot-2.webp" | asset_url }}",
        description: "Our electrolyte & caffeine formula allows for highly bioavailable hydration & energy. This naturally leads to a faster runnerâ€™s high, and more enjoyable run.",
      },
      {
        title: 'Enjoy Reduced Fatigue',
        img: "{{ "benefit-shot-3.webp" | asset_url }}",
        description: "Long Run Coffee blocks adenosine uptake in the brain, preventing tiredness & fatigue.  Plus the added sodium bicarbonate slows lactic acid buildup in muscles.",
      },
    ];
    const [activeBenefit, setActiveBenefit] = React.useState(0);
    const focusedBenefit = benefits[activeBenefit];

    return (
      <div className="lg:px-16 py-12 lg:py-32 z-10 relative lg:transform lg:translate-y-20 max-w-7xl mx-auto">
        <div className="hidden lg:grid grid-cols-3 gap-12 z-10">
          <div>
            <h2 className="font-accent text-cyan-800 text-5xl mb-12">Benefits</h2>
            <div className="flex flex-col space-y-8 items-start">
              {benefits.map((b, i) => (
                <button
                  key={b.title}
                  onClick={() => setActiveBenefit(i)}
                  className={`text-base hover:text-cyan-700 text-left ${
                    i === activeBenefit ? 'text-cyan-700 font-medium underline' : 'text-neutral-700'
                  }`}
                >
                  {b.title}
                </button>
              ))}
            </div>
          </div>
          {
            focusedBenefit ? <img src={focusedBenefit.img} className="transform -translate-y-12 w-full object-fill shadow-md aspect-square rounded-md overflow-hidden" /> : null
          }
          {
            focusedBenefit ? <p className="font-base text-lg leading-[2.5rem] text-cyan-700 text-right pl-8">{focusedBenefit.description}</p> : null
          }
        </div>
        <div className="flex flex-col lg:hidden">
          <h2 className="font-accent text-cyan-700 text-3xl mb-8 pl-8">Benefits</h2>
          <div class="relative w-full flex gap-6 snap-x snap-mandatory overflow-x-auto pb-14 scrollbar-hide">
            {
              benefits.map(b => (
                <div key={b.title} class="snap-center shrink-0 first:pl-8 last:pr-8">
                  <img class="shrink-0 w-[calc(100vw-72px)] h-[calc(100vw-72px)] rounded-lg shadow-lg bg-white object-fill" src={b.img} />
                  <h4 className="font-accent w-[calc(100vw-72px)] text-wrap text-cyan-700 text-xl mt-4">{b.title}</h4>
                  <p className="font-base w-[calc(100vw-72px)] text-wrap text-neutral-600 text-base mt-1">{b.description}</p>
                </div>
              ))
            }
          </div>
        </div>
      </div>
    );
  }

  ReactDOM.render(<LRCCoffeeBenefits />, document.getElementById('lrc-coffee-benefits'));
</script>
